name: Main Workflow
on:
  push:
    branches:
      - master

jobs:
  assist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Cursor CLI
        run: |
          curl https://cursor.com/install -fsS | bash
          echo "$HOME/.cursor/bin" >> $GITHUB_PATH

      - name: Configure git
        run: |
          git config user.name "Cursor Agent"
          git config user.email "cursoragent@cursor.com"

      - name: Update documentation
        env:
          MODEL: grok-4-fast-reasoning
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cursor-agent -p "You are an expert documentation engineer with full access to git and GitHub CLI. 

          The repository is already cloned and in the working directory.

          Your task is to comprehensively review and update the project's documentation for the latest changes. 

          Workflow:
          1. Analyze recent commits and code changes since the last documentation update
          2. Identify all files that need documentation updates (README.md, docs/, inline comments, API docs, etc.)
            - Identify any new documentation files that should be created
            - Identify any stale documentation files that should be deleted
            - Identify any dead code that should be removed
          3. Generate clear, comprehensive updates that reflect the current codebase
          4. Ensure documentation follows project style and structure
          5. If meaningful changes are needed, commit changes with descriptive messages like 'docs: update documentation for [feature/change]'
          6. Push the commits directly to the current branch (master)
          7. If no meaningful changes are needed, skip committing and comment 'Documentation is up to date'

          IMPORTANT: Do not create any new branches or pull requests. Since this is running on a push to master, push directly to master. To avoid workflow loops, only make changes if documentation updates are actually needed based on the recent commits.

          If the last commit was a documentation update, you can probably skip the documentation update but do check in case there are any gaps in the previous agent's work.

          Focus on clarity, completeness, and making the docs the best possible reference for users and developers." \
          --force --model "$MODEL" --output-format=text